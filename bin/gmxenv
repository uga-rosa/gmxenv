#!/bin/bash
set -e

ROOT=$(cd $(dirname $(dirname $0)); pwd)
SHIMS="$ROOT/shims"
VERSIONS="$ROOT/versions"

LOG_DIR="$ROOT/log"
mkdir -p "$LOG_DIR"

switch() {
  version=$1
  if [[ -z $version ]]; then
    echo "'gmxenv switch' requires version"
    exit 1
  fi

  if [[ -d "$VERSIONS/$version" ]]; then
    echo $version > "$SHIMS/version"
  else
    echo "The version is not installed: $version"
    echo "Run 'gmxenv install $version'"
  fi
}

install() {
  mkdir -p "$VERSIONS"
  version=$1
  if [[ -z $version ]]; then
    echo "'gmxenv install' requires version"
    exit 1
  fi
  name="gromacs-$version"
  url="https://ftp.gromacs.org/gromacs/gromacs-$version.tar.gz"
  install_path="$VERSIONS/$version"
  core=$(cat /proc/cpuinfo | grep 'processor' -c)

  logfile="$LOG_DIR/$version.log"

  cd /tmp
  if [[ -d $name ]]; then
    rm -rf "$name"
  fi

  echo "Download ..."
  wget "$url" -o $logfile
  tar xvf "$name.tar.gz" >> "$logfile"
  rm "$name.tar.gz"

  cd "$name"
  mkdir build
  cd build

  echo "Cmake ..."
  cmake .. \
    -DGMX_BUILD_OWN_FFTW=ON \
    -DGMX_GPU=CUDA  \
    -DCMAKE_INSTALL_PREFIX="$install_path"  \
    -DGMX_EXTERNAL_BLAS=on  \
    -DGMX_EXTERNAL_LAPACK=on  \
    >> "$logfile"

  echo "Make ..."
  make -j $core >> "$logfile" 2>&1
  sudo make -j $core install >> "$logfile"

  echo "Done!"

  echo "$version" > $SHIMS/version
  echo "Switch to $version"
}

versions() {
  cd "$VERSIONS"
  version=$(cat $SHIMS/version)
  echo "* $version    now"
  find . -maxdepth 1 -mindepth 1 ! -name "$version" | sed 's/^\.\//  /' | sort
}

update() {
  cd "$ROOT"
  git pull
}

help() {
  cat <<EOL
Usage:
    gmxenv [subcommand] [version]
gromacs version manager
You need to add following to .bashrc
    eval \$(gmxenv init)

Subcommands:
    install             Install the version specified of gromacs.
    switch              Switch to the version specified.
    versions            Show list of versions installed.
    update              Self-update. Use git pull.
    help, -h, --help    Show this message.

Arguments:
    version             Required by 'install' and 'switch'. e.g. '2021.6'
EOL
}

subcommand=$1

case $subcommand in
  switch)
    switch $2
    ;;
  install)
    install $2
    ;;
  versions)
    versions
    ;;
  update)
    update
    ;;
  help | -h | --help)
    help
    ;;
  *)
    echo "Undefined subcommand"
    help
    ;;
esac
